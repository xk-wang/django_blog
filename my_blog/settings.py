"""
Django settings for my_blog project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = None

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = None

# 静态文件收集目录
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'taggit',
    'ckeditor',
    'mptt',
    'notifications',
    'password_reset',
    'blog.apps.BlogConfig',
    'userprofile.apps.UserprofileConfig',
    'comment.apps.CommentConfig',
    'notice.apps.NoticeConfig',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #可添加需要的第三方登陆
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.weibo',
    # 'allauth.socialaccount.providers.qq'
]

#设置站点
SITE_ID=1
#登陆成功后重新定向地址
LOGIN_REDIRECT_URL='/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS=(
    #Django后台可独立allauth登陆
    'django.contrib.auth.backends.ModelBackend',
    #配置allauth独有的认证方法,如email登陆
    'allauth.account.auth_backends.AuthenticationBackend',
)
CKEDITOR_CONFIGS = {
    'default':{
    'width':'auto',
    'height':'250px',
    'tapSpaces':4,
    'toolbar':'Custom',
    'toolbar_Custom':[
        ['Smiley', "CodeSnippet"],
        ['Bold', 'Italic', 'Underline', 'RemoveFormat', 'Blockquote'],
        ['TextColor', 'BGColor'],
        ['Link', 'Unlink'],
        ['NumberedList', 'BulletedList'],
        ['Maximize']
    ],
    #代码块插件
    'extraPlugins':','.join(['codesnippet', 'prism', 'widget', 'lineutils']),
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            # 'class': 'logging.FileHandler',
            # 新增内容
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'when': 'midnight',
            'backupCount': 30,
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR,"static"),
)

#媒体文件地址
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR, 'media/')

# SMTP服务器，改为你的邮箱的smtp!
EMAIL_HOST = None
# 改为你自己的邮箱名！
EMAIL_HOST_USER = None
# 你的邮箱密码
EMAIL_HOST_PASSWORD = None
# 发送邮件的端口
EMAIL_PORT = 25
# 是否使用 TLS
EMAIL_USE_TLS = True
# 默认的发件人
DEFAULT_FROM_EMAIL = None